package messages

import (
	"fmt"
	"github.com/k4sper1love/watchlist-api/pkg/filters"
	"github.com/k4sper1love/watchlist-bot/internal/models"
	"github.com/k4sper1love/watchlist-bot/internal/utils"
)

func BuildCollectionsMessage(session *models.Session, metadata *filters.Metadata) string {
	collections := session.CollectionsState.Collections

	msg := ""

	if metadata.TotalRecords == 0 {
		msg += "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π."
		return msg
	}

	msg += fmt.Sprintf("üìö <b>–í—Å–µ–≥–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π:</b> %d\n\n", metadata.TotalRecords)

	for i, collection := range collections {
		itemID := utils.GetItemID(i, metadata.CurrentPage, metadata.PageSize)

		numberEmoji := numberToEmoji(itemID)

		msg += fmt.Sprintf("%s\n", numberEmoji)
		msg += BuildCollectionDetailMessage(&collection)
	}

	msg += fmt.Sprintf("<b>üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ %d –∏–∑ %d</b>\n\n", metadata.CurrentPage, metadata.LastPage)
	msg += "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ."

	return msg
}

func numberToEmoji(number int) string {
	emojis := []string{"0Ô∏è‚É£", "1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£"}
	if number < 10 {
		return emojis[number]
	}

	result := ""
	for number > 0 {
		digit := number % 10
		result = emojis[digit] + result
		number /= 10
	}
	return result
}
