package messages

import (
	"fmt"
	apiModels "github.com/k4sper1love/watchlist-api/pkg/models"
	"github.com/k4sper1love/watchlist-bot/internal/utils"
)

func BuildFilmDetailMessage(film *apiModels.Film) string {
	msg := ""

	if film.Title != "" {
		msg += fmt.Sprintf("<b>–ù–∞–∑–≤–∞–Ω–∏–µ</b>: %s\n", film.Title)
	}

	msg += fmt.Sprintf("<b>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</b>: %s\n", boolToEmoji(film.IsViewed))

	if film.Genre != "" {
		msg += fmt.Sprintf("<b>–ñ–∞–Ω—Ä</b>: %s\n", film.Genre)
	}

	if film.Year != 0 {
		msg += fmt.Sprintf("<b>–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞</b>: %d\n", film.Year)
	}

	if film.Rating != 0 {
		msg += fmt.Sprintf("<b>–†–µ–π—Ç–∏–Ω–≥</b>: %.2f‚òÖ\n", film.Rating)
	}

	if film.IsViewed && film.UserRating != 0 {
		msg += fmt.Sprintf("<b>–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞</b>: %.2f‚òÖ\n", film.UserRating)
	}

	if film.Description != "" {
		msg += fmt.Sprintf("<b>–û–ø–∏—Å–∞–Ω–∏–µ</b>:\n%s\n", film.Description)
	}

	if film.Comment != "" {
		msg += fmt.Sprintf("<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</b>:\n%s\n", film.Comment)
	}

	if film.IsViewed && film.Review != "" {
		msg += fmt.Sprintf("<b>–†–µ—Ü–µ–Ω–∑–∏—è</b>:\n%s\n", film.Review)
	}

	return msg
}

func BuildFilmDetailWithNumberMessage(itemID int, film *apiModels.Film) string {
	numberEmoji := numberToEmoji(itemID)

	msg := fmt.Sprintf("%s\n", numberEmoji)
	return msg + BuildFilmDetailMessage(film)
}

func BuildFilmGeneralMessage(film *apiModels.Film) string {
	msg := fmt.Sprintf("<b>–§–∏–ª—å–º</b>:  %s\n", film.Title)

	if film.Rating != 0 {
		msg += fmt.Sprintf("<b>–†–µ–π—Ç–∏–Ω–≥:</b> %.2f‚òÖ\n", film.Rating)
	}

	if film.Genre != "" && film.Year != 0 {
		msg += "üé≠ "

		if film.Genre != "" {
			msg += fmt.Sprintf("%d", film.Year)
		}

		if film.Genre != "" {
			if film.Year != 0 {
				msg += ", "
			}
			msg += fmt.Sprintf("%s", film.Genre)
		}

		msg += "\n"
	}

	if film.Description != "" {
		if len(film.Description) > 400 {
			film.Description, _ = utils.SplitTextByLength(film.Description, 300)
			fmt.Println(film.Description)
		}

		msg += fmt.Sprintf("<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> %s\n", film.Description)
	}

	msg += fmt.Sprintf("%s\n\n", boolToString(film.IsViewed))

	return msg
}

func boolToEmoji(viewed bool) string {
	if viewed {
		return "‚úîÔ∏è"
	}
	return "‚úñÔ∏è"
}

func boolToString(viewed bool) string {
	if viewed {
		return "<b>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ </b>‚úîÔ∏è"
	}
	return "<b>–ù–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ </b>‚úñÔ∏è"
}
